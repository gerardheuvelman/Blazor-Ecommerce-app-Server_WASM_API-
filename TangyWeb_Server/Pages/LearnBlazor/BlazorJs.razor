@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime 

<h3>Blazor JS Interop</h3>

<div class="row">
    TestConfirmBox
</div>
<div class="col-2">
    <button class="btn btn-secondary" style="width: 200px" @onclick=TestConfirmBox>Test Confirm Button</button>
</div>
<div class="row">
    @if (confirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation pending...</p>

    }
</div>


<div class="row" mt-4>
    <div class="col-2">
        <button class="btn btn-success" style="width: 200px" @onclick=ToastrSuccess>Toastr Success</button>
    </div>
    <div class="col-2">
        <button class="btn btn-danger" style="width: 200px" @onclick=ToastrFailure>Toastr Failure</button>
    </div>
</div>

<div class="row mt-4">
    <div class="col-2">
        <button class="btn btn-success" style="width: 200px" @onclick=SweetAlertSuccess>SweetAlert Success</button>
    </div>
    <div class="col-2">
        <button class="btn btn-danger" style="width: 200px" @onclick=SweetAlertFailure>SweetAlert Failure</button>
    </div>
</div>



@code {
    private string confirmMessage = "Are you sure you want to click?";
    private bool confirmResult = false;

    private async Task TestConfirmBox()
    {
        confirmResult =  await _JsRuntime.InvokeAsync<bool>("confirm", confirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }

    private async Task ToastrFailure()
    {
        await _JsRuntime.ToastrError("Operation failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync( "SwalFire","success", "Operation Successful");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("SwalFire", "error", "Operation failed");
    }
}
