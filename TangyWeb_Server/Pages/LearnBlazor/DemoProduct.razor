@page "/learnBlazor/demoProduct"

<h2 class=" text-primary">Demo Product</h2>
<p>Favorites Total: @SelectedFavoriteCount</p>
<br />
<p>Last Selected Product: @LastSelectedProductName</p>
<div class="row border" style="background-color:aqua    ">
    @foreach (var product in Products)
    {
        <_IndividualProduct 
            Product=product 
            OnFavoriteUpdated=FavoriteCountUpdate
            OnLastSelectedProductChange=SelectedProductUpdate
        >
            <RF1>
                Number 1!
            </RF1>
            <RF2>
                Number 2!
            </RF2>
        </_IndividualProduct>
    }
</div>

@code
{
    List<Demo_Product> Products = new();

    private int SelectedFavoriteCount { get; set; } = 0;
    private string LastSelectedProductName { get; set; }

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 5,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 155,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }

    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavoriteCount++;
        }
        else
        {
            SelectedFavoriteCount--;
        }
    }

    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }


}
