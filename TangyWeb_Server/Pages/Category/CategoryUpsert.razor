@page "/category/create"
@page "/category/edit/{id:int}"

@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3">@Title Category</h3>
    <div class="col-10">
        @if (IsLoading) 
        {
            <div class="text-center"><img src="images/loading.gif"></div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator/>
                @*<ValidationSummary/>*@
                <div class="form-group py-2">
                    <label>Name</label>
                    <InputText @bind-Value=Category.Name class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back To Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>


@code {
    [Parameter]




    public int Id{ get; set; }

    private CategoryDTO Category { get; set; } = new();
    private string Title { get; set; }

    public bool IsLoading { get; set; }
    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        if (Id == 0) 
        {
            // Create
            Title = "Create";
        }
        else
        {
            // Edit
            Title = "Update";
            await Task.Run(LoadCategory);
        }
        IsLoading = false;
    }

    private void LoadCategory()
    {
        Category = _categoryRepository.Get(Id);
    }


    private void UpsertCategory() 
    {
        if (Category.Id == 0)
        {
            // Create
            _categoryRepository.Create(Category);
        }
        else
        {
            // Update
            _categoryRepository.Update(Category);
        }
        _navigationManager.NavigateTo("category");
    }
}
