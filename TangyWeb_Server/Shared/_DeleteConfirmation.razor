@inject NavigationManager _navigationManager

<div class="modal fade show" data-backdrop="static" data-keyboard="false" id="deleteConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close" @onclick="()=>OnConfirmDelete(false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete @Type "@FriendlyName"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="()=>OnConfirmDelete(false)">
                    Cancel
                </button>
                <button type="button" class="btn btn-danger" @onclick="()=>OnConfirmDelete(true)">
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>

@code {    
    [Parameter]
    public string Type { get; set; } = "";

    [Parameter]
    public string FriendlyName { get; set; } = "";

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    private async Task OnConfirmDelete(bool value)
    {
        if (value)
        {
            await ConfirmationChanged.InvokeAsync(value);
        }
    } 
}
